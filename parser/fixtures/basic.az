// adds to server store
server "kibana_server" {
  addresses = [
    "10.0.0.1"
  ]
}

// adds to server store
inventory "aws.ec2" {
  access_key_id = "access_key_id"
  secret_key = "secret_key"
  connect_on = "PublicIpAddress"
}

// adds to variable store
variable "base_path" {
  type = "map"
  value = {
    dir = "/opt",
    owner = "slack",
  }
}

// adds to variable store
input "credstash.get" "aws_access" {
  keys = [
    "secret_key"
  ]
}

// sets creates variable context
// sets default to apply-to
context "kibana server" {
  user = "root"
  apply-to = [
    "tag_kibana_server",
    "development",
  ]

  variable "install_path" {
    type = "map"
    value = "/installer"
  }

  includes {
    roles = ["elasticsearch"]
  }

  task "apt-get.install" "install-erlang" {
    package = "erlang-full"
  }

  includes {
    roles = ["ruby"]
  }
}

// creates variable context
// uses current server context
role "elasticsearch" {
  // sets the default user for all tasks
  user = "root"

  input "crestash.get" "elasticsearch" {
    keys = ["elasticsearch.password"]
  }

  variable "ruby_install_path" {
    type = "array"
    value = ["/opt/ruby"]
  }

  task "stat" "ruby-exists" {
    path = "/usr/bin/ruby"
  }

  task "bash" "restart-nginx" {
    command = "echo \"does ruby exist ${ ruby-exists.exists }\" >> ${ var.output_file }"
    condition = "${not(ruby-exists.exists)}"
  }
}
